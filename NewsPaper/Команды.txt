Windows PowerShell
(C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены.

Попробуйте новую кроссплатформенную оболочку PowerShell (https://aka.ms/pscore6)

строка:1 знак:1
+ venv\scripts\active
+ ~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (venv\scripts\active:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CouldNotAutoLoadModule
 
PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> venv\scripts\activate
venv\scripts\activate : Не удалось загрузить модуль "venv". Для получения дополнительных сведений выполните команду "Import-Module venv".
строка:1 знак:1
+ venv\scripts\activate
+ ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (venv\scripts\activate:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CouldNotAutoLoadModule
 
PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> venv\scripts\activate
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> py manage.py makemigrations
Traceback (most recent call last):
  File "manage.py", line 11, in main
    from django.core.management import execute_from_command_line
ModuleNotFoundError: No module named 'django'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    main()
  File "manage.py", line 13, in main
    raise ImportError(
ment?
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> python manage.py makemigrations
Traceback (most recent call last):
  File "manage.py", line 11, in main
    from django.core.management import execute_from_command_line
ModuleNotFoundError: No module named 'django'


Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    main()
  File "manage.py", line 13, in main
    raise ImportError(
ImportError: Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environ
ment?
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> pip list
Package    Version
---------- -------
pip        21.1.1
setuptools 56.0.0
WARNING: You are using pip version 21.1.1; however, version 22.3 is available.
You should consider upgrading via the 'c:\users\st.laptop-424rnoqf\desktop\скилфэктори\pacharm\backend\news_dir\newspaper\venv\scripts\python.exe -m pip install --u
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> pip install django
Collecting django
  Using cached Django-4.1.2-py3-none-any.whl (8.1 MB)
Collecting tzdata
  Using cached tzdata-2022.5-py2.py3-none-any.whl (336 kB)
Collecting backports.zoneinfo
  Using cached backports.zoneinfo-0.2.1-cp38-cp38-win_amd64.whl (38 kB)
Collecting sqlparse>=0.2.2
  Using cached sqlparse-0.4.3-py3-none-any.whl (42 kB)
Collecting asgiref<4,>=3.5.2
  Using cached asgiref-3.5.2-py3-none-any.whl (22 kB)
Installing collected packages: tzdata, sqlparse, backports.zoneinfo, asgiref, django
WARNING: You are using pip version 21.1.1; however, version 22.3 is available.
You should consider upgrading via the 'c:\users\st.laptop-424rnoqf\desktop\скилфэктори\pacharm\backend\news_dir\newspaper\venv\scripts\python.exe -m pip install --u
pgrade pip' command.
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> pip list
Package            Version
------------------ -------
asgiref            3.5.2
backports.zoneinfo 0.2.1
pip                21.1.1
setuptools         56.0.0
sqlparse           0.4.3
tzdata             2022.5
WARNING: You are using pip version 21.1.1; however, version 22.3 is available.
You should consider upgrading via the 'c:\users\st.laptop-424rnoqf\desktop\скилфэктори\pacharm\backend\news_dir\newspaper\venv\scripts\python.exe -m pip install --u
pgrade pip' command.
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> python manage.py makemigrations
Migrations for 'news':
  news\migrations\0001_initial.py
    - Create model Author
    - Create model Category
    - Create model Post
    - Create model PostCategory
    - Add field postCategory to post
    - Create model Comment
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> python manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, news, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying news.0001_initial... OK
  Applying sessions.0001_initial... OK
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> python manage.py shell
Python 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from mc_donalds.models import *
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'mc_donalds'
>>> from news_paper.models import * 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'news_paper'
>>> from newspaper.models import *  
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'newspaper'
>>> from NewsPaper.models import * 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'NewsPaper.models'
>>> from NewsPaper.models import * 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'NewsPaper.models'
>>> from news.models import *      
>>> u1=User.objects.create_user(username='Semyon') 
>>> г1
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'г1' is not defined
>>> u1
<User: Semyon>
>>> u1=User.objects.create_user(username='Sam')    
>>> u1
<User: Sam>
>>> Author.objects.create(authorUser=u1)
<Author: Author object (1)>
>>> Category.objects.create(name='IT') 
<Category: Category object (1)>
>>> author = Author.objects.get(id=1)             
>>> author
<Author: Author object (1)>
>>> Post.objects.create(author=author, categoryType='NW', title='sometitle', text='somebigtext')
<Post: Post object (1)>
>>> Post.objects.get(id=1).title 
'sometitle'
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1)) 
>>> Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='anytextbyauthor') 
<Comment: Comment object (1)>
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).rating                                                                                                    
0
>>> Comment.objects.get(id=1).like() 
>>> Comment.objects.get(id=1).rating                                                                                                    
0
>>> Comment.objects.get(id=1).dislike() 
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).rating
>>> Comment.objects.get(id=1)
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).rating
0
>>> Comment.objects.get(id=1).like()
0
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).rating
0
>>> exit()
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> py manage.py makemigrate
Unknown command: 'makemigrate'. Did you mean makemigrations?
Type 'manage.py help' for usage.
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> py manage.py makemigrations
No changes detected
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> py manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, news, sessions
Running migrations:
  No migrations to apply.
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> py manage.py makemigrations
No changes detected
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> python manage.py shell
Python 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from mc_donalds.models import *
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'mc_donalds'
>>> from news.models import *       
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).rating
1
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).rating    
>>> Author.objects.get(id=1)
<Author: Author object (1)>
>>> a = Author.objects.get(id=1)
>>> a.update_rating()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\news\models.py", line 14, in update_rating
    commentRat = self.authorUser.coment_set.aggreagate(commentRating=Sum('rating'))
AttributeError: 'User' object has no attribute 'coment_set'
>>> a.update_rating()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\news\models.py", line 14, in update_rating
    commentRat = self.authorUser.comment_set.aggreagate(commentRating=Sum('rating'))
AttributeError: 'User' object has no attribute 'coment_set'
>>> exit()
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> python manage.py shell
Python 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from mc_donalds.models import *
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'mc_donalds'
>>> from news.models import *
>>> Author.objects.get(id=1)
<Author: Author object (1)>
>>> a = Author.objects.get(id=1)
>>> a = Author.objects.get(id=1)
>>> a.update_rating()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\news\models.py", line 14, in update_rating
    commentRat = self.authorUser.comment_set.aggreagate(commentRating=Sum('rating'))
AttributeError: 'RelatedManager' object has no attribute 'aggreagate'
>>> exit()
(venv) PS C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper> python manage.py shell
Python 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from mc_donalds.models import *
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'mc_donalds'
>>> from news.models import *       
>>> Author.objects.get(id=1)
<Author: Author object (1)>
>>> a = Author.objects.get(id=1)
>>> a.update_rating()
>>> a.ratingAuthor  
-2
>>> Post.objects.get(id=1).like()
>>> a.update_rating()
>>> a.ratingAuthor
1
>>> a = Author.objects.order_by('-ratingAuthor')[:1]
>>> a
<QuerySet [<Author: Author object (1)>]>
>>> u1=User.objects.create_user(username='Semyon')
Traceback (most recent call last):
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\backends\sqlite3\base.py", line 357, in 
execute
    return Database.Cursor.execute(self, query, params)
sqlite3.IntegrityError: UNIQUE constraint failed: auth_user.username

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\contrib\auth\models.py", line 161, in creat
e_user
    return self._create_user(username, email, password, **extra_fields)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\contrib\auth\models.py", line 155, in _crea
te_user
    user.save(using=self._db)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\contrib\auth\base_user.py", line 68, in sav
e
    super().save(*args, **kwargs)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\base.py", line 812, in save      
    self.save_base(
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\base.py", line 863, in save_base 
    updated = self._save_table(
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\base.py", line 1006, in _save_tab
le
    results = self._do_insert(
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\base.py", line 1047, in _do_inser
t
    return manager._insert(
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_
method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\query.py", line 1790, in _insert 
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\sql\compiler.py", line 1660, in e
xecute_sql
    cursor.execute(sql, params)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\backends\utils.py", line 103, in execute
    return super().execute(sql, params)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\backends\utils.py", line 67, in execute 
    return self._execute_with_wrappers(
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\backends\utils.py", line 80, in _execute
_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\backends\sqlite3\base.py", line 357, in 
execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.IntegrityError: UNIQUE constraint failed: auth_user.username
>>> c=User.objects.create_user(username='Sn')      
>>> c
<User: Sn>
>>> Author.objects.create(authorUser=c)  
<Author: Author object (2)>
>>> a = Author.objects.order_by('-ratingAuthor')[:1]
>>> a
<QuerySet [<Author: Author object (1)>]>
>>> a.rating
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'rating'
>>> a.ratingAuthor
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'ratingAuthor'
>>> for i in a:
... i.ratingAuthor
  File "<console>", line 2
    i.ratingAuthor
    ^
IndentationError: expected an indented block
>>> for i in a:    
... i.ratingAuthor 
  File "<console>", line 2
    i.ratingAuthor
    ^
IndentationError: expected an indented block
>>> for i in a:    
...     i.ratingAuthor
...     i.authoUser.username
... 
1
Traceback (most recent call last):
  File "<console>", line 3, in <module>
AttributeError: 'Author' object has no attribute 'authoUser'
>>> for i in a:              
...     i.ratingAuthor 
...     i.authorUser.username
... 
1
'Sam'
>>> Category.objects.create(name='Политика') 
<Category: Category object (2)>
>>> Category.objects.create(name='Автомобили') 
<Category: Category object (3)>
>>> Category.objects.create(name='Кулинария')  
<Category: Category object (4)>
>>> Post.objects.create(author=author, categoryType='NW', title='Заголовок 1', text='Текст 1')     
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'author' is not defined
>>> Post.objects.create(author=1, categoryType='NW', title='Заголовок 1', text='Текст 1')      
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_
method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\query.py", line 669, in create   
    obj = self.model(**kwargs)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\base.py", line 541, in __init__  
    _setattr(self, field.name, rel_obj)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\fields\related_descriptors.py", l
ine 235, in __set__
    raise ValueError(
ValueError: Cannot assign "1": "Post.author" must be a "Author" instance.
>>> Post.objects.create(author(pk=1), categoryType='NW', title='Заголовок 1', text='Текст 1') 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'author' is not defined
>>> author = Author.objects.get(id=1)
>>> author
<Author: Author object (1)>
>>> Post.objects.create(author=author, categoryType='NW', title='Заголовок 1', text='Текст 1')
<Post: Post object (2)>
>>> Post.objects.create(author=author, categoryType='NW', title='Заголовок 2', text='Текст 2') 
<Post: Post object (3)>
>>> Post.objects.create(author=author, categoryType='AR', title='Заголовок 3', text='Текст 3') 
<Post: Post object (4)>
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=2)) 
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=1)) 
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=3)) 
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=4)) 
>>> Post.objects.get(id=4).postCategory.add(Category.objects.get(id=4)) 
>>> Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='Текст 1')         
<Comment: Comment object (2)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=2), commentUser=Author.objects.get(id=2).authorUser, text='Текст 2') 
<Comment: Comment object (3)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=2), commentUser=Author.objects.get(id=2).authorUser, text='Текст 3') 
<Comment: Comment object (4)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=3).authorUser, text='Текст 4') 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_
method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\ST.LAPTOP-424RNOQF\Desktop\СкилФэктори\PaCharm\BackEnd\news_dir\NewsPaper\venv\lib\site-packages\django\db\models\query.py", line 650, in get      
    raise self.model.DoesNotExist(
news.models.Author.DoesNotExist: Author matching query does not exist.
>>> Comment.objects.create(commentPost=Post.objects.get(id=4), commentUser=Author.objects.get(id=2).authorUser, text='Текст 4') 
<Comment: Comment object (5)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=2).authorUser, text='Текст 5') 
<Comment: Comment object (6)>
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=2).like() 
>>> Comment.objects.get(id=6).like() 
>>> Comment.objects.get(id=6).like()
>>> Comment.objects.get(id=6).like()
>>> Comment.objects.get(id=6).like()
>>> Comment.objects.get(id=6).like()
>>> Comment.objects.get(id=6).like()
>>> Comment.objects.get(id=5).like() 
>>> Comment.objects.get(id=5).like()
>>> Comment.objects.get(id=5).dislike() 
>>> Comment.objects.get(id=6).dislike() 
>>> Comment.objects.get(id=6).dislike()
>>> Comment.objects.get(id=1).dislike() 
>>> Comment.objects.get(id=1).rating
-1
>>> Comment.objects.get(id=2).rating 
1
>>> Comment.objects.get(id=3).rating 
0
>>> Comment.objects.get(id=4).rating 
0
>>> Comment.objects.get(id=5).rating 
1
>>> Comment.objects.get(id=6).rating 
4
>>> a.ratingAuthor
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'ratingAuthor'
>>> a.update_rating()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'update_rating'
>>> author.update_rating() 
>>> author.ratingAuthor    
3
>>> Author.objects.order_by('-ratingAuthor')        
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>]>
>>> b = Author.objects.get(id=2)      
>>> b.ratingAuthor                           
0
>>> a = Author.objects.order_by('-ratingAuthor')[:1] 
>>> a
<QuerySet [<Author: Author object (1)>]>
>>> a.ratingAuthor
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'ratingAuthor'
>>> author.ratingAuthor 
3
>>> Comment.objects.get(id=6)       
<Comment: Comment object (6)>
>>> Comment.objects.get(id=6).text
'Текст 5'
>>> Comment.objects.get(id=6).text.dateCreation
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'str' object has no attribute 'dateCreation'
>>> Comment.objects.get(id=6).(text, dateCreation) 
  File "<console>", line 1
    Comment.objects.get(id=6).(text, dateCreation)
                              ^
SyntaxError: invalid syntax
>>> Comment.objects.get(id=6).(text, dateCreation, rating) 
  File "<console>", line 1
    Comment.objects.get(id=6).(text, dateCreation, rating)
                              ^
SyntaxError: invalid syntax
>>> Comment.objects.get(id=6).dateCreation                
datetime.datetime(2022, 10, 17, 22, 6, 18, 729454, tzinfo=datetime.timezone.utc)
>>> Comment.objects.get(id=6).rating      
4
>>> Comment.objects.get(id=6).commentPost_id
3
>>> Comment.objects.get(id=6).commentUser_id 
3
>>> Comment.objects.all()                   
<QuerySet [<Comment: Comment object (1)>, <Comment: Comment object (2)>, <Comment: Comment object (3)>, <Comment: Comment object (4)>, <Comment: Comment object (5)>
, <Comment: Comment object (6)>]>
>>> Author.objects.all()  
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>]>
>>> User.objects.all()   
<QuerySet [<User: Semyon>, <User: Sam>, <User: Sn>]>
>>> Author.objects.order_by('-ratingAuthor')               
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>]>
>>> Author.objects.get(id=1)
<Author: Author object (1)>
>>>   
